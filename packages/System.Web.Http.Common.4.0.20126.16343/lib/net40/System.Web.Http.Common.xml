<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.Common</name>
  </assembly>
  <members>
    <member name="T:System.Web.Http.HttpRequestMessageCommonExtensions">
      <summary> Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.HttpRequestMessageCommonExtensions.CreateResponse(System.Net.Http.HttpRequestMessage)">
      <summary> Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Web.Http.HttpRequestMessageCommonExtensions.CreateResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode)">
      <summary> Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="request">The HTTP request.</param>
      <param name="statusCode">The HTTP status code.</param>
    </member>
    <member name="T:System.Web.Http.RouteParameter">
      <summary> The <see cref="T:System.Web.Http.RouteParameter" /> class can be used to indicate properties about a route parameter (the literals and placeholders  located within segments of a <see cref="M:IHttpRoute.RouteTemplate" />).  It can for example be used to indicate that a route parameter is optional. </summary>
    </member>
    <member name="F:System.Web.Http.RouteParameter.Optional">
      <summary> Optional Parameter </summary>
    </member>
    <member name="M:System.Web.Http.RouteParameter.ToString">
      <summary> Returns a <see cref="T:System.String" /> that represents this instance. </summary>
      <returns> A <see cref="T:System.String" /> that represents this instance. </returns>
    </member>
    <member name="T:System.Web.Http.Common.Error">
      <summary> Utility class for creating, logging and unwrapping <see cref="T:System.Exception" /> instances. </summary>
    </member>
    <member name="M:System.Web.Http.Common.Error.Argument(System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.ArgumentException" /> with the provided properties and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.Argument(System.String,System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.ArgumentException" /> with the provided properties and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ArgumentNull(System.String)">
      <summary> Creates an <see cref="T:System.ArgumentNullException" /> with the provided properties and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ArgumentNull(System.String,System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.ArgumentNullException" /> with the provided properties and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ArgumentNullOrEmpty(System.String)">
      <summary> Creates an <see cref="T:System.ArgumentException" /> with a default message and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ArgumentOutOfRange(System.String,System.Object,System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.ArgumentOutOfRangeException" /> with the provided properties and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
      <param name="actualValue">The value of the argument that causes this exception.</param>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ArgumentTooLarge(System.String,System.Object,System.Object)">
      <summary> Creates an <see cref="T:System.ArgumentOutOfRangeException" /> with a message saying that the argument must be less than or equal to maxValue and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
      <param name="actualValue">The value of the argument that causes this exception.</param>
      <param name="maxValue">The maximum size of the argument.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ArgumentTooSmall(System.String,System.Object,System.Object)">
      <summary> Creates an <see cref="T:System.ArgumentOutOfRangeException" /> with a message saying that the argument must be greater than or equal to minValue and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
      <param name="actualValue">The value of the argument that causes this exception.</param>
      <param name="minValue">The minimum size of the argument.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ArgumentUriHasQueryOrFragment(System.String,System.Uri)">
      <summary> Creates an <see cref="T:System.ArgumentException" /> with a message saying that the argument must be an absolute URI  without a query or fragment identifier and then logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
      <param name="actualValue">The value of the argument that causes this exception.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ArgumentUriNotAbsolute(System.String,System.Uri)">
      <summary> Creates an <see cref="T:System.ArgumentException" /> with a message saying that the argument must be an absolute URI and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
      <param name="actualValue">The value of the argument that causes this exception.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ArgumentUriNotHttpOrHttpsScheme(System.String,System.Uri)">
      <summary> Creates an <see cref="T:System.ArgumentException" /> with a message saying that the argument must be an "http" or "https" URI and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
      <param name="actualValue">The value of the argument that causes this exception.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.AsError``1(System.AggregateException)">
      <summary> Unwraps and logs an <see cref="T:System.AggregateException" /> as <see cref="F:TraceLevel.Error" /> using &lt;typeparamref name="TPreferredException" /&gt; as the preferred unwrapped <see cref="T:System.Exception" /> to return. </summary>
      <returns>The unwrapped and logged exception.</returns>
      <param name="aggregateException">The <see cref="T:System.AggregateException" /> to unwrap and log</param>
      <typeparam name="TPreferredException">The preferred <see cref="T:System.Type" /> to unwrap. If not present then  the first <see cref="T:System.Exception" /> is returned instead.</typeparam>
    </member>
    <member name="M:System.Web.Http.Common.Error.AsError(System.Exception)">
      <summary> Unwraps and logs an <see cref="T:System.Exception" /> as <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The unwrapped and logged exception.</returns>
      <param name="exception">The exception to unwrap and log</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.AsInformation``1(System.AggregateException)">
      <summary> Unwraps and logs an <see cref="T:System.AggregateException" /> as <see cref="F:TraceLevel.Info" /> using &lt;typeparamref name="TPreferredException" /&gt; as the preferred unwrapped <see cref="T:System.Exception" /> to return. </summary>
      <returns>The unwrapped and logged exception.</returns>
      <param name="aggregateException">The <see cref="T:System.AggregateException" /> to unwrap and log</param>
      <typeparam name="TPreferredException">The preferred <see cref="T:System.Type" /> to unwrap. If not present then  the first <see cref="T:System.Exception" /> is returned instead.</typeparam>
    </member>
    <member name="M:System.Web.Http.Common.Error.AsInformation(System.Exception)">
      <summary> Unwraps and logs an <see cref="T:System.Exception" /> as <see cref="F:TraceLevel.Info" />. </summary>
      <returns>The unwrapped and logged exception.</returns>
      <param name="exception">The exception to unwrap and log</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.AsVerbose``1(System.AggregateException)">
      <summary> Unwraps and logs an <see cref="T:System.AggregateException" /> as <see cref="F:TraceLevel.Verbose" /> using &lt;typeparamref name="TPreferredException" /&gt; as the preferred unwrapped <see cref="T:System.Exception" /> to return. </summary>
      <returns>The unwrapped and logged exception.</returns>
      <param name="aggregateException">The <see cref="T:System.AggregateException" /> to unwrap and log</param>
      <typeparam name="TPreferredException">The preferred <see cref="T:System.Type" /> to unwrap. If not present then  the first <see cref="T:System.Exception" /> is returned instead.</typeparam>
    </member>
    <member name="M:System.Web.Http.Common.Error.AsVerbose(System.Exception)">
      <summary> Unwraps and logs an <see cref="T:System.Exception" /> as <see cref="F:TraceLevel.Verbose" />. </summary>
      <returns>The unwrapped and logged exception.</returns>
      <param name="exception">The exception to unwrap and log</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.AsWarning``1(System.AggregateException)">
      <summary> Unwraps and logs an <see cref="T:System.AggregateException" /> as <see cref="F:TraceLevel.Warning" /> using &lt;typeparamref name="TPreferredException" /&gt; as the preferred unwrapped <see cref="T:System.Exception" /> to return. </summary>
      <returns>The unwrapped and logged exception.</returns>
      <param name="aggregateException">The <see cref="T:System.AggregateException" /> to unwrap and log</param>
      <typeparam name="TPreferredException">The preferred <see cref="T:System.Type" /> to unwrap. If not present then  the first <see cref="T:System.Exception" /> is returned instead.</typeparam>
    </member>
    <member name="M:System.Web.Http.Common.Error.AsWarning(System.Exception)">
      <summary> Unwraps and logs an <see cref="T:System.Exception" /> as <see cref="F:TraceLevel.Warning" />. </summary>
      <returns>The unwrapped and logged exception.</returns>
      <param name="exception">The exception to unwrap and log</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.Format(System.String,System.Object[])">
      <summary> Formats the specified resource string using <see cref="M:CultureInfo.CurrentCulture" />. </summary>
      <returns>The formatted string.</returns>
      <param name="format">A composite format string.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.InvalidEnumArgument(System.String,System.Int32,System.Type)">
      <summary> Creates an <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="parameterName">The name of the parameter that caused the current exception.</param>
      <param name="invalidValue">The value of the argument that failed.</param>
      <param name="enumClass">A <see cref="T:System.Type" /> that represents the enumeration class with the valid values.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.InvalidOperation(System.Exception,System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.InvalidOperationException" /> and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="innerException">Inner exception</param>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.InvalidOperation(System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.InvalidOperationException" /> and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.KeyNotFound">
      <summary> Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException" /> with a message saying that the key was not found and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:System.Web.Http.Common.Error.KeyNotFound(System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException" /> with a message saying that the key was not found and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.NotSupported(System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.NotSupportedException" /> and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.ObjectDisposed(System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.ObjectDisposedException" /> initialized according to guidelines and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.OperationCanceled">
      <summary> Creates an <see cref="T:System.OperationCanceledException" /> initialized with the provided parameters and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:System.Web.Http.Common.Error.OperationCanceled(System.String,System.Object[])">
      <summary> Creates an <see cref="T:System.OperationCanceledException" /> initialized with the provided parameters and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
      <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
      <param name="messageArgs">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:System.Web.Http.Common.Error.PropertyNull">
      <summary> Creates an <see cref="T:System.ArgumentNullException" /> with the provided properties and logs it with <see cref="F:TraceLevel.Error" />. </summary>
      <returns>The logged <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="T:System.Web.Http.Common.HttpMethodHelper">
      <summary> Various helper methods for the static members of <see cref="T:System.Net.Http.HttpMethod" />.  </summary>
    </member>
    <member name="M:System.Web.Http.Common.HttpMethodHelper.GetHttpMethod(System.String)">
      <summary> Gets the static <see cref="T:System.Net.Http.HttpMethod" /> instance for any given HTTP method name. </summary>
      <returns>An existing static <see cref="T:System.Net.Http.HttpMethod" /> or a new instance if the method was not found.</returns>
      <param name="method">The HTTP request method.</param>
    </member>
    <member name="T:System.Web.Http.Common.ILogger">
      <summary> General purpose logging interface. </summary>
    </member>
    <member name="M:System.Web.Http.Common.ILogger.Log(System.String,System.Diagnostics.TraceLevel,System.Func`1)"></member>
    <member name="M:System.Web.Http.Common.ILogger.LogException(System.String,System.Diagnostics.TraceLevel,System.Exception)">
      <summary> Logs the given exception at the given level under the given category. </summary>
      <param name="category">The category under which to log the message.  It can be empty but it cannot be null.</param>
      <param name="level">The <see cref="T:System.Diagnostics.TraceLevel" /> at which to log the exception.</param>
      <param name="exception">The <see cref="T:System.Exception" /> to log.  It cannot be null.</param>
    </member>
  </members>
</doc>